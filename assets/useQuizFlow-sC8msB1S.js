import{u as se,b as ie,f as ne,r as s}from"./router-BxjC687J.js";import{l as c,O as b,u as ue}from"./index-RewXCStj.js";class ae{async saveQuizProgress(r){try{if(!r.userId)return c.warn("Cannot save progress: no user ID provided","QuizProgressService"),null;const{data:i,error:n}=await b.from("quiz_progress").upsert({id:r.id,user_id:r.userId,quiz_id:r.quizId,current_question_index:r.currentQuestionIndex,answers:r.answers,completed:r.completed,mode:r.mode,elapsed_time:r.elapsedTime,last_updated:new Date().toISOString()},{onConflict:"user_id,quiz_id,mode"});return n?(c.error("Failed to save quiz progress","QuizProgressService",{progress:r},n),null):r.id||null}catch(i){return c.error("Exception saving quiz progress","QuizProgressService",{progress:r},i),null}}async getQuizProgress(r,i,n){try{const{data:u,error:e}=await b.from("quiz_progress").select("*").eq("user_id",r).eq("quiz_id",i).eq("mode",n).single();if(e)return e.code!=="PGRST116"&&c.error("Failed to fetch quiz progress","QuizProgressService",{userId:r,quizId:i,mode:n},e),null;if(!u)return null;const o=u;return{id:o.id,quizId:o.quiz_id,userId:o.user_id,currentQuestionIndex:o.current_question_index,answers:o.answers||{},completed:o.completed,mode:o.mode,elapsedTime:o.elapsed_time,lastUpdated:o.last_updated}}catch(u){return c.error("Exception fetching quiz progress","QuizProgressService",{userId:r,quizId:i,mode:n},u),null}}async deleteQuizProgress(r,i,n){try{const{error:u}=await b.from("quiz_progress").delete().eq("user_id",r).eq("quiz_id",i).eq("mode",n);return u?(c.error("Failed to delete quiz progress","QuizProgressService",{userId:r,quizId:i,mode:n},u),!1):!0}catch(u){return c.error("Exception deleting quiz progress","QuizProgressService",{userId:r,quizId:i,mode:n},u),!1}}async listQuizProgress(r){try{const{data:i,error:n}=await b.from("quiz_progress").select("*").eq("user_id",r).order("last_updated",{ascending:!1});return n?(c.error("Failed to list quiz progress","QuizProgressService",{userId:r},n),[]):i?i.map(u=>({id:u.id,quizId:u.quiz_id,userId:u.user_id,currentQuestionIndex:u.current_question_index,answers:u.answers||{},completed:u.completed,mode:u.mode,elapsedTime:u.elapsed_time,lastUpdated:u.last_updated})):[]}catch(i){return c.error("Exception listing quiz progress","QuizProgressService",{userId:r},i),[]}}}const B=new ae;function H(I){if(!I)return[];const r=[...I];for(let i=r.length-1;i>0;i--){const n=Math.floor(Math.random()*(i+1));[r[i],r[n]]=[r[n],r[i]]}return r}const K={shuffleQuestions:!1,shuffleAnswers:!1,timeLimit:""},fe=(I,r)=>{var $;const{quizzes:i,activeQuiz:n,setActiveQuiz:u,currentUser:e}=ue(),o=se(),A=ie(),{quizId:V}=ne(),a=I||V,[l,W]=s.useState(null),[Q,X]=s.useState(K),[m,R]=s.useState([]),[f,q]=s.useState(0),[P,E]=s.useState({}),[L,Y]=s.useState(!0),[T,F]=s.useState(null),[h,C]=s.useState(0),[k,M]=s.useState(null),[_,D]=s.useState("take"),[N,O]=s.useState(!1),g=s.useRef(null),z=s.useRef(null),y=s.useRef(null),S=s.useRef(null);s.useEffect(()=>{const t=A.pathname;t.includes("/practice/")?D("practice"):t.includes("/take/")&&D("take")},[A.pathname]);const G=($=A.state)==null?void 0:$.attemptSettings,J=s.useMemo(()=>G,[JSON.stringify(G)]),j=s.useCallback(async()=>{if(!(e!=null&&e.id)||!a)return!1;try{const t=await B.getQuizProgress(e.id,a,_);return t?(M(t.id||null),q(t.currentQuestionIndex),E(t.answers||{}),C(t.elapsedTime||0),c.info("Loaded saved quiz progress","useQuizFlow",{quizId:a,userId:e.id,currentQuestionIndex:t.currentQuestionIndex,elapsedTime:t.elapsedTime}),!0):!1}catch(t){return c.error("Failed to load quiz progress","useQuizFlow",{quizId:a,userId:e.id},t),!1}},[e==null?void 0:e.id,a,_]),v=s.useCallback(async(t=!1)=>{if(!(!(e!=null&&e.id)||!a||!l||N))try{O(!0);const p={id:k||void 0,quizId:a,userId:e.id,currentQuestionIndex:f,answers:P,completed:t,mode:_,elapsedTime:h},d=await B.saveQuizProgress(p);d&&!k&&M(d),c.info("Saved quiz progress","useQuizFlow",{quizId:a,userId:e.id,currentQuestionIndex:f,answersCount:Object.keys(P).length,completed:t})}catch(p){c.error("Failed to save quiz progress","useQuizFlow",{quizId:a,userId:e.id},p)}finally{O(!1)}},[e==null?void 0:e.id,a,l,k,f,P,_,h,N]);s.useEffect(()=>{let t=!0;return(async()=>{if(!a){t&&o("/dashboard");return}const d=J||((l==null?void 0:l.id)===a?Q:K);t&&JSON.stringify(d)!==JSON.stringify(Q)&&X(d);let w=n&&n.id===a?n:i.find(x=>x.id===a);if(w){if(t){W(w),(!n||n.id!==w.id)&&u(w);let x=w.questions;d.shuffleQuestions&&(x=H([...w.questions])),R(x),e!=null&&e.id?await j()||(q(0),E({})):q(0),d.timeLimit!==""&&Number(d.timeLimit)>0?F(Number(d.timeLimit)*60):F(null)}}else t&&o("/dashboard");t&&Y(!1)})(),()=>{t=!1,g.current&&clearInterval(g.current),z.current&&clearInterval(z.current),S.current&&clearInterval(S.current)}},[a,i,n,o,u,J,l==null?void 0:l.id,Q,j,e==null?void 0:e.id]),s.useEffect(()=>{if(l&&!L)return y.current||(y.current=Date.now(),h===0&&C(0)),z.current=window.setInterval(()=>{const t=Date.now(),p=Math.floor((t-y.current)/1e3);C(p)},1e3),e!=null&&e.id&&(S.current=window.setInterval(()=>{v(!1)},3e4)),()=>{z.current&&clearInterval(z.current),S.current&&clearInterval(S.current)}},[l,L,h,e==null?void 0:e.id,v]),s.useEffect(()=>()=>{y.current=null,g.current&&clearInterval(g.current),z.current&&clearInterval(z.current),S.current&&clearInterval(S.current)},[]),s.useEffect(()=>{if(T===null){g.current&&clearInterval(g.current);return}if(T<=0){g.current&&clearInterval(g.current),l&&r&&r();return}return g.current=window.setInterval(()=>{F(t=>t?t-1:0)},1e3),()=>{g.current&&clearInterval(g.current)}},[T,l,r]);const Z=s.useMemo(()=>{if(!m||m.length===0||f>=m.length)return;const t=m[f];return t&&Q.shuffleAnswers?{...t,options:H([...t.options])}:t},[m,f,Q.shuffleAnswers]),U=s.useCallback(()=>f<m.length-1?(q(t=>t+1),e!=null&&e.id&&v(!1),!0):!1,[f,m.length,e==null?void 0:e.id,v]),ee=s.useCallback(()=>f>0?(q(t=>t-1),!0):!1,[f]),te=s.useCallback((t,p)=>{E(d=>({...d,[t]:p}))},[]),re=s.useCallback(async()=>{e!=null&&e.id&&a&&await v(!0)},[e==null?void 0:e.id,a,v]);return{localActiveQuiz:l,shuffledQuestions:m,currentQuestion:Z,currentQuestionIndex:f,userAnswers:P,loading:L,timeLeft:T,elapsedTime:h,attemptSettings:Q,goToNextQuestion:U,goToPreviousQuestion:ee,updateUserAnswer:te,formatTime:t=>{const p=Math.floor(t/60),d=t%60;return`${p.toString().padStart(2,"0")}:${d.toString().padStart(2,"0")}`},totalQuestions:m.length,setShuffledQuestions:R,setCurrentQuestionIndex:q,saveProgress:v,markQuizCompleted:re,quizMode:_}};export{fe as u};
