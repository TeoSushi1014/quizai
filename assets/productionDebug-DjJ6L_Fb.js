const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BWvNSvhJ.js","assets/utils-rUpm7H1u.js","assets/vendor-DoC2WAmd.js","assets/ui-BGuvgkTr.js","assets/router-BxjC687J.js","assets/markdown-Bj7tmv2T.js","assets/index-DivuEwef.css"])))=>i.map(i=>d[i]);
import{a as l}from"./index-BWvNSvhJ.js";import{runDiagnostics as g,quickCheck as m}from"./deploymentDiagnostics-CaaxjYUI.js";import{_ as d}from"./utils-rUpm7H1u.js";import"./ui-BGuvgkTr.js";import"./router-BxjC687J.js";import"./vendor-DoC2WAmd.js";import"./markdown-Bj7tmv2T.js";const h={BASE_URL:"/quizai/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_GEMINI_API_KEY:"",VITE_SUPABASE_ANON_KEY:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpidXFvbm1lb3JsZGdpd3Zkcm9yIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgzMTY2MDQsImV4cCI6MjA2Mzg5MjYwNH0.vcMUnOgSPAgpigUOkkcopk5XH5AMyNjM772oUqTJGfo",VITE_SUPABASE_URL:"https://jbuqonmeorldgiwvdror.supabase.co"},p={environmentVariables:[{name:"VITE_SUPABASE_URL",description:"Supabase project URL",required:!0,example:"https://your-project.supabase.co",validation:o=>o.startsWith("https://")&&o.includes(".supabase.co")},{name:"VITE_SUPABASE_ANON_KEY",description:"Supabase anonymous/public API key",required:!0,example:"eyJ...",validation:o=>o.startsWith("eyJ")&&o.length>100},{name:"VITE_GEMINI_API_KEY",description:"Google Gemini API key for AI quiz generation",required:!1,example:"AIza...",validation:o=>o.startsWith("AIza")},{name:"VITE_RECAPTCHA_SITE_KEY",description:"reCAPTCHA site key for spam protection",required:!1,example:"6Le...",validation:o=>o.startsWith("6L")}]};class c{static validateEnvironment(){const e=[];p.environmentVariables.forEach(a=>{const n=h[a.name];a.required&&!n?e.push({name:a.name,status:"fail",message:"Required environment variable is missing",suggestion:`Set ${a.name} in your deployment environment. Example: ${a.example}`}):n&&a.validation&&!a.validation(n)?e.push({name:a.name,status:"warning",message:"Environment variable format may be incorrect",suggestion:`Check the format of ${a.name}. Expected pattern: ${a.example}`}):n?e.push({name:a.name,status:"pass",message:"Environment variable configured correctly"}):e.push({name:a.name,status:"not-checked",message:"Optional environment variable not set"})});const s=window.location.hostname!=="localhost";e.push({name:"Environment Type",status:"pass",message:`Running in ${s?"PRODUCTION":"DEVELOPMENT"} mode`});const t=window.location.href;return s&&(t.includes("http://")&&!t.includes("localhost")?e.push({name:"HTTPS",status:"warning",message:"Site is not using HTTPS",suggestion:"Configure SSL/TLS certificate for better security"}):e.push({name:"HTTPS",status:"pass",message:"Site is using HTTPS"})),e}static async validateSupabaseConnection(){const e=[];try{const{supabase:s}=await d(async()=>{const{supabase:r}=await import("./index-BWvNSvhJ.js").then(u=>u.a1);return{supabase:r}},__vite__mapDeps([0,1,2,3,4,5,6])),t=performance.now(),{error:a}=await s.from("users").select("count").limit(1),n=performance.now()-t;a?a.code==="42P01"?e.push({name:"Database Tables",status:"fail",message:"Required database tables do not exist",suggestion:"Run database migration scripts to create required tables"}):a.code==="42501"?e.push({name:"Database Permissions",status:"fail",message:"Row Level Security policies are blocking access",suggestion:"Check RLS policies in Supabase dashboard"}):e.push({name:"Database Connection",status:"fail",message:`Database error: ${a.message}`,suggestion:"Check Supabase configuration and network connectivity"}):e.push({name:"Database Connection",status:"pass",message:`Connected successfully (${n.toFixed(0)}ms latency)`});const{error:i}=await s.auth.getSession();i?e.push({name:"Authentication System",status:"warning",message:`Auth error: ${i.message}`,suggestion:"Check Supabase authentication configuration"}):e.push({name:"Authentication System",status:"pass",message:"Authentication system is working"})}catch(s){e.push({name:"Supabase Connection",status:"fail",message:`Cannot connect to Supabase: ${s.message}`,suggestion:"Check VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY environment variables"})}return e}static async runFullValidation(){const e=this.validateEnvironment(),s=await this.validateSupabaseConnection(),t=[...e,...s],a={total:t.length,passed:t.filter(n=>n.status==="pass").length,failed:t.filter(n=>n.status==="fail").length,warnings:t.filter(n=>n.status==="warning").length,notChecked:t.filter(n=>n.status==="not-checked").length};return{environment:e,supabase:s,summary:a}}static logValidationResults(e){console.group("üîç Environment Validation Results"),e.forEach(s=>{const t={pass:"‚úÖ",fail:"‚ùå",warning:"‚ö†Ô∏è","not-checked":"‚ûñ"}[s.status];console.log(`${t} ${s.name}: ${s.message}`),s.suggestion&&console.log(`   üí° ${s.suggestion}`)}),console.groupEnd()}}const f=async()=>{const o=await c.runFullValidation();if(console.log("üéØ Validation Summary:"),console.log(`   Total checks: ${o.summary.total}`),console.log(`   ‚úÖ Passed: ${o.summary.passed}`),console.log(`   ‚ùå Failed: ${o.summary.failed}`),console.log(`   ‚ö†Ô∏è Warnings: ${o.summary.warnings}`),console.log(`   ‚ûñ Not checked: ${o.summary.notChecked}`),o.summary.failed>0){console.error("‚ùå Critical issues found! Fix these before deployment:");const e=[...o.environment,...o.supabase].filter(s=>s.status==="fail");c.logValidationResults(e)}return o},A={async testAuth(o="test@example.com"){console.log("üîê Testing authentication flow...");try{const e=await l.testSupabaseConnectivity(o);return console.log("Auth test result:",e),e}catch(e){return console.error("Auth test failed:",e),null}},async runFullDiagnostics(){console.log("üîç Running comprehensive diagnostics..."),await g();const o=await m();console.log("Quick health check:",o);const e=await f();return console.log("Full validation:",e),{quickResult:o,validation:e}},checkOAuthConfig(){console.log("üîó Checking OAuth configuration...");const o={hostname:window.location.hostname,protocol:window.location.protocol,fullUrl:window.location.href,isProduction:window.location.hostname!=="localhost",googleApiLoaded:!!window.google,supabaseUrl:"https://jbuqonmeorldgiwvdror.supabase.co",supabaseKeyLength:208};console.table(o);const e=[];return o.supabaseUrl||e.push("Missing VITE_SUPABASE_URL"),o.supabaseKeyLength===0&&e.push("Missing VITE_SUPABASE_ANON_KEY"),o.googleApiLoaded||e.push("Google API not loaded"),o.isProduction&&o.protocol!=="https:"&&e.push("Not using HTTPS in production"),e.length>0?console.warn("‚ö†Ô∏è Issues found:",e):console.log("‚úÖ Basic configuration looks good"),{config:o,issues:e}},checkOAuthUrls(){console.log("üåê Checking OAuth URL patterns...");const o=`${window.location.protocol}//${window.location.hostname}`,e=`${o}${window.location.pathname}`,s={"Site URL":e,"JavaScript Origins":[o,e],"Redirect URIs":[`${e}`,`${e}/`,`${e}#/`,"https://jbuqonmeorldgiwvdror.supabase.co/auth/v1/callback"]};return console.log("Required OAuth URLs for Google Cloud Console:"),console.log("====================================="),Object.entries(s).forEach(([t,a])=>{console.log(`${t}:`),Array.isArray(a)?a.forEach(n=>console.log(`  - ${n}`)):console.log(`  - ${a}`),console.log("")}),s},async simulateGoogleAuth(){console.log("üß™ Simulating Google auth for testing...");const o={sub:"test-user-id",email:"test@example.com",name:"Test User",picture:"https://via.placeholder.com/150",access_token:"mock-access-token",credential:"mock-credential"};try{const e=await l.signInWithGoogle(o);return console.log("Simulated auth result:",e),e}catch(e){return console.error("Simulated auth failed:",e),null}},clearAuthData(){console.log("üßπ Clearing all authentication data...");const o=[];for(let s=0;s<localStorage.length;s++){const t=localStorage.key(s);t&&(t.includes("supabase")||t.includes("auth")||t.includes("google"))&&o.push(t)}o.forEach(s=>{localStorage.removeItem(s),console.log(`Removed: ${s}`)});const e=[];for(let s=0;s<sessionStorage.length;s++){const t=sessionStorage.key(s);t&&(t.includes("supabase")||t.includes("auth")||t.includes("google"))&&e.push(t)}e.forEach(s=>{sessionStorage.removeItem(s),console.log(`Removed from session: ${s}`)}),console.log("‚úÖ Auth data cleared. Refresh the page to restart.")},help(){console.log(`
üõ†Ô∏è QuizAI Production Debug Utilities
=====================================

Available commands:
- window.QuizAIDebug.testAuth('email@example.com')    // Test auth with specific email
- window.QuizAIDebug.runFullDiagnostics()             // Run all diagnostic tests
- window.QuizAIDebug.checkOAuthConfig()               // Check OAuth configuration
- window.QuizAIDebug.checkOAuthUrls()                 // Get required OAuth URLs
- window.QuizAIDebug.simulateGoogleAuth()             // Test with mock Google user
- window.QuizAIDebug.clearAuthData()                  // Clear all auth data
- window.QuizAIDebug.help()                           // Show this help

Example usage:
  window.QuizAIDebug.runFullDiagnostics()
  window.QuizAIDebug.checkOAuthUrls()

For OAuth setup issues:
1. Run checkOAuthUrls() to get required URLs
2. Add these URLs to Google Cloud Console
3. Add site URL to Supabase Auth settings
4. Clear auth data and test again
    `)}};typeof window<"u"&&(window.QuizAIDebug=A,console.log("QuizAI Debug utilities available at window.QuizAIDebug"),console.log("Type window.QuizAIDebug.help() for available commands"));export{A as productionDebugUtils};
